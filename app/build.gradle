plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'com.google.dagger.hilt.android'
    id 'io.gitlab.arturbosch.detekt'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def serverPort = properties.getProperty('serverPort') ?: ' '

android {
    namespace 'io.github.bradleyiw.ns'
    compileSdk 33

    defaultConfig {
        applicationId "io.github.bradleyiw.ns"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        packagingOptions {
            exclude 'META-INF/*'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "CALL_MONITOR_SERVER_PORT", "\"$serverPort\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        buildConfig true
    }
}

tasks.named("detekt").configure {
    parallel = true
    buildUponDefaultConfig = false
    setSource(files(rootProject.projectDir))
    config.setFrom("$rootProject.rootDir/config/detekt.yml")
    include("**/*.kt")
    exclude("**/*.kts", "*/build/*", "/buildSrc")
    reports {
        xml.enabled = true
        html.enabled = true
        txt.enabled = false
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter'
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.2.0")

    implementation('androidx.core:core-ktx:1.9.0')
    implementation('androidx.appcompat:appcompat:1.5.1')
    implementation('com.google.android.material:material:1.6.1')

    implementation("io.ktor:ktor-server-core:2.1.2")
    implementation("io.ktor:ktor-server-cio:2.1.2")
    implementation("io.ktor:ktor-server-content-negotiation:2.1.2")
    implementation("io.ktor:ktor-serialization-kotlinx-json:2.1.2")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3")
    implementation("ch.qos.logback:logback-classic:1.2.1")

    implementation('androidx.constraintlayout:constraintlayout:2.1.4')
    implementation('androidx.lifecycle:lifecycle-livedata-ktx:2.5.1')
    implementation('androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1')

    implementation("androidx.room:room-runtime:2.4.3")
    kapt("androidx.room:room-compiler:2.4.3")
    implementation("androidx.room:room-ktx:2.4.3")
    testImplementation("androidx.room:room-testing:2.4.3")

    implementation("com.google.dagger:dagger:2.44")
    kapt("com.google.dagger:dagger-compiler:2.44")

    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-compiler:2.44")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    testImplementation("io.mockk:mockk:1.13.2")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
    testImplementation("androidx.arch.core:core-testing:2.1.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.0")

    androidTestImplementation('androidx.test.ext:junit:1.1.3')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0')
}
